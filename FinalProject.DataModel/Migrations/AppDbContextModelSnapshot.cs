// <auto-generated />
using System;
using FinalProject.DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.DataModel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FinalProject.DataModel.Product", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ID"), 1L, 1);

                    b.Property<DateTime?>("DateStocked")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateStocked");

                    b.Property<int?>("Price")
                        .HasColumnType("int")
                        .HasColumnName("Price");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("Qty");

                    b.Property<string>("Stock")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Stock");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Supplier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Type");

                    b.HasKey("ID");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateStocked = new DateTime(2022, 8, 9, 16, 45, 33, 651, DateTimeKind.Local).AddTicks(7735),
                            Qty = 3,
                            Supplier = "Sha"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
